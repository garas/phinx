build: false
shallow_clone: false
platform: 'x64'
clone_folder: C:\projects\phinx
environment:
  TESTS_PHINX_DB_ADAPTER_SQLSRV_ENABLED: true
  TESTS_PHINX_DB_ADAPTER_SQLSRV_HOST: localhost
  TESTS_PHINX_DB_ADAPTER_SQLSRV_USERNAME: sa
  TESTS_PHINX_DB_ADAPTER_SQLSRV_PASSWORD: Password12!
  TESTS_PHINX_DB_ADAPTER_SQLSRV_DATABASE: phinxtesting
  TESTS_PHINX_DB_ADAPTER_SQLSRV_PORT: 1433
  php_ver_target: 7.2
  matrix:
      - dependencies: highest
        db: 2012
        php_ddl: 56_nts
        php_zip: php-5.6.28-nts-Win32-VC11-x86.zip
        db_dsn: 'sqlserver://sa:Password12!@.\SQL2012SP1/phinxtesting?MultipleActiveResultSets=false'
        sqlsrv: https://download.microsoft.com/download/C/D/B/CDB0A3BB-600E-42ED-8D5E-E4630C905371/SQLSRV32.EXE

services:
  - mssql2012sp1

cache:
  - '%LOCALAPPDATA%\Composer\files -> composer.lock'
  - C:\ProgramData\chocolatey\bin -> .appveyor.yml
  - C:\ProgramData\chocolatey\lib -> .appveyor.yml
  - C:\php -> .appveyor.yml

init:
    - SET PATH=C:\Program Files\OpenSSL;c:\tools\php;%PATH%
    - SET COMPOSER_NO_INTERACTION=1
    - SET ANSICON=121x90 (121x90)

install:
  - ps: |
      # Check if installation is cached
      if (!(Test-Path C:\php)) {
        # Windows Update Service is disabled in AppVeyor, enable to install PHP dependencies
        Set-Service wuauserv -StartupType Manual
        cinst --no-progress --params '""/InstallDir:C:\php""' --ignore-checksums -y php --version ((choco search php --exact --all-versions -r | select-string -pattern $env:php_ver_target | sort { [version]($_ -split '\|' | select -last 1) } -Descending | Select-Object -first 1) -replace '[php|]','')

        cd C:\php
        copy php.ini-production php.ini
        echo date.timezone="UTC" >> php.ini
        echo extension_dir=ext >> php.ini
        echo extension=php_openssl.dll >> php.ini
        echo extension=php_mbstring.dll >> php.ini
        echo extension=php_intl.dll >> php.ini
        echo extension=php_fileinfo.dll >> php.ini

        Invoke-WebRequest https://windows.php.net/downloads/pecl/releases/pdo_sqlsrv/5.2.0/php_pdo_sqlsrv-5.2.0-7.2-nts-vc15-x64.zip -OutFile php_pdo_sqlsrv.zip
        7z x php_pdo_sqlsrv.zip -oC:\php\ext php_pdo_sqlsrv.dll -aoa > $null

        Invoke-WebRequest https://windows.php.net/downloads/pecl/releases/sqlsrv/5.2.0/php_sqlsrv-5.2.0-7.2-nts-vc15-x64.zip -OutFile php_sqlsrv.zip
        7z x php_sqlsrv.zip -oC:\php\ext php_sqlsrv.dll -aoa > $null
        echo extension=php_pdo_sqlsrv.dll >> php.ini
        echo extension=php_sqlsrv.dll >> php.ini
      }

  - cd C:\projects\phinx
  - appveyor-retry appveyor DownloadFile https://getcomposer.org/composer.phar
  - IF %dependencies%==lowest php composer.phar update --prefer-lowest --no-progress -n
  - IF %dependencies%==current php composer.phar install --no-progress
  - IF %dependencies%==highest php composer.phar update --no-progress -n
  - composer show

test_script:
  - sqlcmd -S localhost,1433 -U sa -P Password12! -Q "create database phinxtesting;"
  - cd c:\projects\phinx
  - vendor/bin/phpunit --no-configuration --bootstrap tests/phpunit-bootstrap.php tests/

on_finish:
  - ps: $blockRdp = $true; iex ((new-object net.webclient).DownloadString('https://raw.githubusercontent.com/appveyor/ci/master/scripts/enable-rdp.ps1'))
